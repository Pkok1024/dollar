openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: Successful 
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: Ai
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: https://
  - name: Downloader
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: https://
  - name: Random
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: https://
  - name: Search
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: https://

paths:
  /api/ai/bard:
    get:
      summary: bard ai api
      description: communication with bard ai
      tags:
        - Ai
      parameters:
        - in: query
          name: q
          required: true
          description: The search query.
          schema:
            type: string
      responses:
        '200':
          description: Successful response with search results.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  code:
                    type: integer
                  author:
                    type: string
                  data:
                    type: object
              example:
                status: Success
                code: 200
                author: xyla
                data: {}
  /api/ai/bingimage:
    get:
      summary: bard ai api
      description: communication with bard ai
      tags:
        - Ai
      parameters:
        - in: query
          name: q
          required: true
          description: The search query.
          schema:
            type: string
      responses:
        '200':
          description: Successful response with search results.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  code:
                    type: integer
                  author:
                    type: string
                  data:
                    type: object
              example:
                status: Success
                code: 200
                author: xyla
                data: {}
  /api/ai/gptonline:
    get:
      summary: bard ai api
      description: communication with bard ai
      tags:
        - Ai
      parameters:
        - in: query
          name: q
          required: true
          description: The search query.
          schema:
            type: string
      responses:
        '200':
          description: Successful response with search results.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  code:
                    type: integer
                  author:
                    type: string
                  data:
                    type: object
              example:
                status: Success
                code: 200
                author: xyla
                data: {}
  /api/ai/azure:
    get:
      summary: bard ai api
      description: communication with bard ai
      tags:
        - Ai
      parameters:
        - in: query
          name: q
          required: true
          description: The search query.
          schema:
            type: string
      responses:
        '200':
          description: Successful response with search results.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  code:
                    type: integer
                  author:
                    type: string
                  data:
                    type: object
              example:
                status: Success
                code: 200
                author: xyla
                data: {}
  /api/ai/deepenglish:
    get:
      summary: bard ai api
      description: communication with bard ai
      tags:
        - Ai
      parameters:
        - in: query
          name: q
          required: true
          description: The search query.
          schema:
            type: string
      responses:
        '200':
          description: Successful response with search results.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  code:
                    type: integer
                  author:
                    type: string
                  data:
                    type: object
              example:
                status: Success
                code: 200
                author: xyla
                data: {}
                
                
# ini buat downloader section 
                
  /api/downloader/tiktok:
    get:
      summary: "Download TikTok content"
      description: "Downloads TikTok content using the provided URL."
      tags:
        - Downloader
      parameters:
        - in: query
          name: url
          required: true
          description: "The URL of the TikTok content to download."
          type: string
      responses:
        200:
          description: "Successful response with downloaded TikTok content."
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  code:
                    type: integer
                  author:
                    type: string
                  data:
                    type: object
              example:
                status: "Success"
                code: 200
                author: "xyla"
                data: {}

  /api/downloader/sfilemobi:
    get:
      summary: "Download TikTok content"
      description: "Downloads TikTok content using the provided URL."
      tags:
        - Downloader
      parameters:
        - in: query
          name: url
          required: true
          description: "The URL of the TikTok content to download."
          type: string
      responses:
        200:
          description: "Successful response with downloaded TikTok content."
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  code:
                    type: integer
                  author:
                    type: string
                  data:
                    type: object
              example:
                status: "Success"
                code: 200
                author: "xyla"
                data: {}

  /api/downloader/mediafire:
    get:
      summary: "Download TikTok content"
      description: "Downloads TikTok content using the provided URL."
      tags:
        - Downloader
      parameters:
        - in: query
          name: url
          required: true
          description: "The URL of the TikTok content to download."
          type: string
      responses:
        200:
          description: "Successful response with downloaded TikTok content."
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  code:
                    type: integer
                  author:
                    type: string
                  data:
                    type: object
              example:
                status: "Success"
                code: 200
                author: "xyla"
                data: {}
  # ini buat random image section 
                
  /api/random/china:
    get:
      summary: "Get random image and video"
      description: "Random image API"
      tags: 
        - Random
      responses:
        200:
          description: "Successfully retrieved the random image."
          content:
            image/png:
              schema:
                type: string 
  /api/random/indonesia:
    get:
      summary: "Get random image and video"
      description: "Random image API"
      tags: 
        - Random
      responses:
        200:
          description: "Successfully retrieved the random image."
          content:
            image/png:
              schema:
                type: string 
  /api/random/japan:
    get:
      summary: "Get random image and video"
      description: "Random image API"
      tags: 
        - Random
      responses:
        200:
          description: "Successfully retrieved the random image."
          content:
            image/png:
              schema:
                type: string 
  /api/random/korean:
    get:
      summary: "Get random image and video"
      description: "Random image API"
      tags: 
        - Random
      responses:
        200:
          description: "Successfully retrieved the random image."
          content:
            image/png:
              schema:
                type: string 
  /api/random/vietnam:
    get:
      summary: "Get random image and video"
      description: "Random image API"
      tags: 
        - Random
      responses:
        200:
          description: "Successfully retrieved the random image."
          content:
            image/png:
              schema:
                type: string 
  /api/random/random:
    get:
      summary: "Get random image and video"
      description: "Random image API"
      tags: 
        - Random
      responses:
        200:
          description: "Successfully retrieved the random image."
          content:
            image/png:
              schema:
                type: string 
  /api/random/thailand:
    get:
      summary: "Get random image and video"
      description: "Random image API"
      tags: 
        - Random
      responses:
        200:
          description: "Successfully retrieved the random image."
          content:
            image/png:
              schema:
                type: string 
  /api/random/malaysia:
    get:
      summary: "Get random image and video"
      description: "Random image API"
      tags: 
        - Random
      responses:
        200:
          description: "Successfully retrieved the random image."
          content:
            image/png:
              schema:
                type: string 
  /api/random/potatogodzilla:
    get:
      summary: "Get random image and video"
      description: "Random image API"
      tags: 
        - Random
      responses:
        200:
          description: "Successfully retrieved the random image."
          content:
            image/png:
              schema:
                type: string 
  /api/search/youtube:
    get:
      summary: "Search YouTube content"
      description: "Search YouTube content using the provided query."
      tags:
        - Search
      parameters:
        - in: query
          name: q
          required: true
          description: "The query of the YouTube content to search."
          type: string
      responses:
        200:
          description: "Successful response with downloaded YouTube content."
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  code:
                    type: integer
                  author:
                    type: string
                  data:
                    type: object
              example:
                status: "Success"
                code: 200
                author: "xyla"
                data: {}

  /api/search/xnxx:
    get:
      summary: "Search YouTube content"
      description: "Search YouTube content using the provided query."
      tags:
        - Search
      parameters:
        - in: query
          name: q
          required: true
          description: "The query of the YouTube content to search."
          type: string
      responses:
        200:
          description: "Successful response with downloaded YouTube content."
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  code:
                    type: integer
                  author:
                    type: string
                  data:
                    type: object
              example:
                status: "Success"
                code: 200
                author: "xyla"
                data: {}
  /api/upload/cdn:
    post:
      summary: "Upload a file to Discord"
      tags:
        - Uploader
      parameters:
        - in: formData
          name: file
          type: file
          description: The file to upload
      responses:
        200:
          description: "File uploaded successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: "Success message"
                  result:
                    type: object
                    description: "Result from Discord upload"
        400:
          description: "No file uploaded or file size exceeds the limit"
